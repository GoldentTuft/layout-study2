module Main exposing (main)

import Browser
import Html exposing (Html)
import Html.Attributes.Classname exposing (classMixinWith)
import Mixin exposing (Mixin)
import Mixin.Html as Mixin
import Neat exposing (NoGap, Protected, Renderer, View, defaultRenderer, fromNoGap, setAttribute, setBoundary, setLayout, setMixin, setMixins)
import Neat.Layout as Layout
import Neat.Layout.Column as Column exposing (Column, defaultColumn)
import Neat.Layout.Row as Row exposing (defaultRow)



-- App


main : Program () Model Msg
main =
    Neat.element
        { init = \_ -> init
        , view = view
        , update = update
        , subscriptions = subscriptions
        , renderer = \_ -> defaultRenderer
        }


type alias Model =
    ()


init : ( Model, Cmd Msg )
init =
    ( ()
    , Cmd.none
    )


type Msg
    = NoOp


update : Msg -> Model -> ( Model, Cmd Msg )
update msg model =
    case msg of
        NoOp ->
            ( model
            , Cmd.none
            )


type MenuGap
    = MenuGap


menuGap : Neat.IsGap MenuGap
menuGap =
    Neat.IsGap
        { width = 0.8
        , height = 0.8
        }


menu : View NoGap msg
menu =
    Layout.row
        [ Neat.textBlock "Brand"
            |> setClass "menu_brand"
            |> fromNoGap menuGap
        , Layout.rowWith { defaultRow | horizontal = Row.Right, vertical = Row.VCenter }
            [ menuItem "Item2"
            , menuItem "Item3"
            ]
            |> setLayout Layout.fill
        ]
        |> setBoundary menuGap
        |> setClass "menu"


menuItem : String -> View MenuGap msg
menuItem m =
    Neat.textBlock
        m
        |> setClass "menu_item"
        |> fromNoGap menuGap


type BodyGap
    = BodyGap


bodyGap : Neat.IsGap BodyGap
bodyGap =
    Neat.IsGap
        { width = 0.8
        , height = 0.8
        }



-- box : View NoGap msg
-- box =
--     Neat.textBlock "box"
--         |> setClass "box"


box : View NoGap msg
box =
    Neat.textBlock """
        Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat.
        """


body : View NoGap msg
body =
    Layout.row
        [ Neat.textBlock "leftSide"
            |> fromNoGap bodyGap
            |> setBoundary bodyGap
            |> setLayout (Layout.fillBy 15)
            |> setClass "sidebar"
        , Layout.column
            [ Neat.textBlock "content"
            , Neat.textBlock "hoge"
            , Neat.textBlock "piyo"
            , Layout.column (List.repeat 100 box)
                |> setLayout Layout.fill
                |> setClass "scrollAreaY"
            ]
            |> fromNoGap bodyGap
            |> setBoundary bodyGap
            |> setLayout (Layout.fillBy 70)
            |> setClass "content"
        , Neat.textBlock "rightSide"
            |> fromNoGap bodyGap
            |> setBoundary bodyGap
            |> setLayout (Layout.fillBy 15)
            |> setClass "sidebar"
        ]
        |> setClass "body"


view : Model -> View NoGap Msg
view model =
    Layout.column
        [ menu
        , body |> setLayout Layout.fill -- |> setClass "main"
        , Neat.textBlock "footer" |> setClass "footer"
        ]
        |> setClass "main"


subscriptions : Model -> Sub Msg
subscriptions _ =
    Sub.none



-- Helper functions


{-| A specialized version of `class` for this module.
It converts given class names into ones generated by CSS modules.
-}
class : String -> Mixin msg
class =
    classMixinWith <| \name -> "app__" ++ name


setClass : String -> View NoGap msg -> View NoGap msg
setClass =
    setMixin << class
